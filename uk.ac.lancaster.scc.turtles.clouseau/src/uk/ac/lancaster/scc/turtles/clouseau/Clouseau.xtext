grammar uk.ac.lancaster.scc.turtles.clouseau.Clouseau with org.eclipse.xtext.common.Terminals

generate clouseau "http://www.ac.uk/lancaster/scc/turtles/clouseau/Clouseau"

CLOSpecification:
    name = ID
    commitments += CLOCommitment*
    events += CLOEvent*
    controls += CLOControl*
;
    
CLOCommitment:
    'commitment' name = ID
     debtor = ID 'to' creditor = ID
    'create' create = CLOExpression
    'detach' detach = CLOExpression
    'discharge' discharge = CLOExpression
;

CLOExpression:
    CLOOrExpression
;

// left associativity    
CLOOrExpression returns CLOExpression:
    CLOAndExpression ({CLOOrExpression.left = current} 'or' right = CLOAndExpression)*
;

// left associativity
CLOAndExpression returns CLOExpression:
    CLOExceptExpression ({CLOAndExpression.left = current} 'and' right = CLOExceptExpression)*
;

CLOExceptExpression returns CLOExpression:
	CLOPrimary ({CLOExceptExpression.left = current} 'except' right = CLOPrimary)*
;
    
CLOPrimary returns CLOExpression:
    '(' CLOExpression ')' | CLOBaseEvent | CLOLifecycleEvent
;

//CLOAtomic returns CLOExpression:
//	CLOBaseEvent | CLOLifecycleEvent
//;

CLOBaseEvent returns CLOExpression:
    {CLOBaseEvent} event = [CLOEvent]
;

CLOLifecycleEvent returns CLOExpression:
	CLOCreated | CLODetached | CLODischarged
;

CLOCreated returns CLOExpression:
    'created' {CLOCreated} commitment = [CLOCommitment]
;

CLODetached returns CLOExpression:
    'detached' {CLODetached} commitment = [CLOCommitment]
;

CLODischarged returns CLOExpression:
    'discharged' {CLODischarged} commitment = [CLOCommitment]
;

CLOEvent:
    name = ID
    '(' attributes += CLOAttribute  (',' attributes += CLOAttribute)* ')'
    'key' keys += ID (',' keys += ID)*
    'time' time = ID
;

CLOControl:
    role = ID 'controls' eventControls += CLOEventControl+
;

CLOEventControl:
    event = [CLOEvent] 'with' attributes += ID (',' attributes += ID)*
;

CLOAttribute:
	name = ID nillable?= ('nillable')?
;
