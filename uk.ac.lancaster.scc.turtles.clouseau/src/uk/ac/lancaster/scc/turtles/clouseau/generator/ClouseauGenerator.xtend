/*
 * generated by Xtext 2.12.0
 */
package uk.ac.lancaster.scc.turtles.clouseau.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import uk.ac.lancaster.scc.turtles.clouseau.clouseau.CLOSpecification

/**
 * Generates code from model files on save.
 * 
 */
class ClouseauGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val name = resource.allContents.toIterable.filter(CLOSpecification).head.name
		val commitmentExtractor = new CommitmentExtractor(resource, new BottomUpNestedExpressionResolver(resource), new TopDownExceptExpressionSimplifer)
		val eventExtractor = new EventExtractor(resource)
		val controlExtractor = new ControlExtractor(resource)
	
		val specification = new Specification(name, commitmentExtractor.extract, eventExtractor.extract, controlExtractor.extract)
		
		val compiler = new ClouseauToBSPLCompiler(specification)
 		//val protocol = compiler.compile
		val intermediary = compiler.compileIntermediaryProtocol
		val intermediaryPrinter = new IntermediaryProtocolPrinter(intermediary)
		fsa.generateFile(resource.URI.lastSegment.split("\\.").get(0) + ".bspl.int", intermediaryPrinter.toCharSequence)
		val protocol = compiler.linkIntermediaryProtocol(intermediary)
		val printer = new ProtocolPrinter(protocol)
		fsa.generateFile(resource.URI.lastSegment.split("\\.").get(0) + ".bspl", printer.toCharSequence)
	}
}

// Input validation
// ? can event and parameter names overlap
// ! names that start with underscore are reserved for internally generated names
// ? what happens when an event is controlled by multiple roles